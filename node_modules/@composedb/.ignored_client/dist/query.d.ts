import type { BaseQuery, CeramicApi, Page, Pagination, StreamState } from '@ceramicnetwork/common';
import { ModelInstanceDocument } from '@ceramicnetwork/stream-model-instance';
import type { Connection, ConnectionArguments } from 'graphql-relay';
export declare type ConnectionQuery = BaseQuery & ConnectionArguments;
export declare type IndexQuery = BaseQuery & Pagination;
export declare function toIndexQuery(source: ConnectionQuery): IndexQuery;
export declare function toRelayConnection(ceramic: CeramicApi, page: Page<StreamState>): Connection<ModelInstanceDocument>;
export declare function queryConnection(ceramic: CeramicApi, query: ConnectionQuery): Promise<Connection<ModelInstanceDocument>>;
export declare function querySingle(ceramic: CeramicApi, query: BaseQuery): Promise<ModelInstanceDocument | null>;
